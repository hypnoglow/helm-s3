name: docker-images

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  docker-images:
    name: Publish docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        helm:
          - 2.17.0
          - 3.12.3
          - 3.13.2
    env:
      IMAGE_NAME: hypnoglow/helm-s3
      HELM_VERSION: ${{ matrix.helm }}
    steps:

      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          cache: true
          go-version-file: 'go.mod'

      - name: Download dependencies
        run: |
          go mod download -x
          go mod vendor

      - name: Prepare variables
        id: vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { GITHUB_REF_NAME, GITHUB_REF_TYPE, GITHUB_SHA } = process.env
            
            let helm_version_minor = "${{ matrix.helm }}".split('.').slice(0, -1).join('.')      
            
            let plugin_version = `commit.${context.sha}`
            let push = false
            if (GITHUB_REF_TYPE === "branch" && GITHUB_REF_NAME === "master") {
              plugin_version = "master"
              push = true
            }
            if (GITHUB_REF_TYPE === "tag") {
              plugin_version = GITHUB_REF_NAME.replace(/^v/, "")
              push = true
            }
            
            let build_date = new Date().toISOString()
            
            core.setOutput('helm_version_minor', helm_version_minor)
            core.setOutput('plugin_version', plugin_version)
            core.setOutput('build_date', build_date)
            core.setOutput('vcs_ref', context.sha)
            core.setOutput('push', push)

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            hypnoglow/helm-s3
          tags: |
            type=semver,pattern={{ version }},suffix=-helm${{ matrix.helm }}
            type=semver,pattern={{ version }},suffix=-helm${{ steps.vars.outputs.helm_version_minor }}
            type=ref,event=branch,enable={{ is_default_branch }},suffix=-helm${{ matrix.helm }}
            type=ref,event=branch,enable={{ is_default_branch }},suffix=-helm${{ steps.vars.outputs.helm_version_minor }}
            type=raw,value=commit.{{ sha }},suffix=-helm${{ matrix.helm }}
            type=raw,value=commit.{{ sha }},suffix=-helm${{ steps.vars.outputs.helm_version_minor }}

      - name: Login to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: steps.vars.outputs.push == 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Build and push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            HELM_VERSION=${{ matrix.helm }}
            PLUGIN_VERSION=${{ steps.vars.outputs.plugin_version }}
            BUILD_DATE=${{ steps.vars.outputs.build_date }}
            VCS_REF=${{ steps.vars.outputs.vcs_ref }}
          push: ${{ steps.vars.outputs.push }}
